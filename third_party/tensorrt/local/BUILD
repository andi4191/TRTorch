package(default_visibility = ["//visibility:public"])

config_setting(
   name = "aarch64",
   values = {
	"cpu" : "aarch64"
   },
)

cc_library(
    name = "nvinfer_headers",
    hdrs = select({
	":aarch64" : [
	                "include/aarch64-linux-gnu/NvUtils.h",
     	             ] + glob([
                               "include/aarch64-linux-gnu/NvInfer*.h",
                              ], exclude=[
                                          "include/aarch64-linux-gnu/NvInferPlugin.h",
                                          "include/aarch64-linux-gnu/NvInferPluginUtils.h"
                             ]),
	"//conditions:default" : [
		 	        "include/NvUtils.h",
         			] + glob([
                                "include/NvInfer*.h",
                                         ], exclude=[
                                          "include/NvInferPlugin.h",
                                          "include/NvInferPluginUtils.h"
                                           ]),
    }),
    includes = select({
        ":aarch64" : ["include/aarch64-linux-gnu"],
	"//conditions:default" : ["include/"],
    }),
    visibility = ["//visibility:private"],
)

cc_import(
    name = "nvinfer_lib",
    shared_library = select({
	"aarch64" : "lib/aarch64-linux-gnu/libnvinfer.so",
	"//conditions:default" : "lib/x86_64-linux-gnu/libnvinfer.so",
    }),
    visibility = ["//visibility:private"],
)

cc_library(
    name = "nvinfer",
    deps = [
        "nvinfer_headers",
        "nvinfer_lib",
    ] + select({
	":aarch64": [
			"@cuda_aarch64//:cudart",
			"@cuda_aarch64//:cublas",
			"@cudnn_aarch64//:cudnn"
			],
	"//conditions:default":  [
			"@cuda//:cudart",
			"@cuda//:cublas",
			"@cudnn//:cudnn"
			 ],
    }),

    visibility = ["//visibility:public"],
)

####################################################################################

cc_import(
    name = "nvparsers_lib",
    shared_library = select({
        "aarch64" : "lib/aarch64-linux-gnu/libnvparsers.so",
        "//conditions:default" : "lib/x86_64-linux-gnu/libnvparsers.so",
    }),
    visibility = ["//visibility:private"],
)


cc_library(
    name = "nvparsers_headers",
    hdrs = [
        "include/NvCaffeParser.h",
        "include/NvOnnxParser.h",
        "include/NvOnnxParserRuntime.h",
        "include/NvOnnxConfig.h",
        "include/NvUffParser.h"
    ],
    includes = ["include/"],
    visibility = ["//visibility:private"],
)

cc_library(
    name = "nvparsers",
    deps = [
        "nvparsers_headers",
        "nvparsers_lib",
        "nvinfer"
    ],
    visibility = ["//visibility:public"],
)

####################################################################################

cc_import(
    name = "nvonnxparser_lib",
    shared_library = select({
	"aarch64" : "lib/aarch64-linux-gnu/libnvonnxparser.so",
	"//conditions:default" : "lib/x86_64-linux-gnu/libnvonnxparser.so",
    }),
    visibility = ["//visibility:private"],
)

cc_library(
    name = "nvonnxparser_headers",
    hdrs = [
        "include/NvOnnxParser.h",
        "include/NvOnnxParserRuntime.h",
        "include/NvOnnxConfig.h"
    ],
    includes = ["include/"],
    visibility = ["//visibility:private"],
)

cc_library(
    name = "nvonnxparser",
    deps = [
        "nvonnxparser_headers",
        "nvonnxparser_lib",
        "nvinfer"
    ],
    visibility = ["//visibility:public"],
)

####################################################################################

cc_import(
    name = "nvonnxparser_runtime_lib",
    shared_library = select({
       "aarch64" : "lib/x86_64-linux-gnu/libnvonnxparser_runtime.so",
       "//conditions:default" : "lib/x86_64-linux-gnu/libnvonnxparser_runtime.so",
    }),
    visibility = ["//visibility:public"],
)

cc_library(
    name = "nvonnxparser_runtime_header",
    hdrs = ["include/NvOnnxParserRuntime.h"],
    includes = ["include/"],
    visibility = ["//visibility:private"],
)

cc_library(
    name = "nvonnxparser_runtime",
    deps = [
        "nvparsers_headers",
        "nvparsers_lib",
        "nvinfer"
    ],
    visibility = ["//visibility:public"],
)

####################################################################################

cc_import(
    name = "nvcaffeparser_lib",
    shared_library = select({
	"aarch64" : "lib/aarch64-linux-gnu/libnvcaffe_parsers.so",
	"//conditions:default" : "lib/x86_64-linux-gnu/libnvcaffe_parsers.so",
    }),
    visibility = ["//visibility:private"],
)

cc_library(
    name = "nvcaffeparser_headers",
    hdrs = ["include/NvCaffeParser.h"],
    includes = ["include/"],
    visibility = ["//visibility:private"],
)

cc_library(
    name = "nvcaffeparser",
    deps = [
        "nvcaffeparser_headers",
        "nvcaffeparser_lib",
        "nvinfer"
    ],
    visibility = ["//visibility:public"],
)

####################################################################################

cc_import(
    name = "nvinferplugin_lib",
    shared_library = select({
       "aarch64" : "lib/x86_64-linux-gnu/libnvinfer_plugin.so",
       "//conditions:default" : "lib/x86_64-linux-gnu/libnvinfer_plugin.so",
    }),
    visibility = ["//visibility:private"],
)

cc_library(
    name = "nvinferplugin_headers",
    hdrs = glob(["include/NvInferPlugin*.h"]),
    includes = ["include/"],
    visibility = ["//visibility:private"],
)

cc_library(
    name = "nvinferplugin",
    deps = [
        "nvinferplugin_headers",
        "nvinferplugin_lib",
        "nvinfer"
    ],
    visibility = ["//visibility:public"],
)
